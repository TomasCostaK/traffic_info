{"ast":null,"code":"var _jsxFileName = \"/home/tomascosta/Downloads/IES/iesproject_trafficjammer/traffic-jammer/Mapper/src/views/examples/MapperPage.js\";\n\n/*!\n\n=========================================================\n* Paper Kit React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-kit-react\n\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/paper-kit-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { render } from 'react-dom';\nimport { Stage, Layer, Star, Line, Circle, Text } from 'react-konva'; // reactstrap components\n\nimport { Button, Form, Input, Container, Row, Col } from \"reactstrap\"; // core components\n\nimport ExamplesNavbar from \"components/Navbars/ExamplesNavbar.js\";\nlet window_height = 400;\nlet window_width = 800;\n\nfunction analyse_streets(direction) {\n  var x, y, end_x, end_y, delta_x, delta_y, points, color;\n  x = 250;\n  y = 0;\n  end_x = 350;\n  end_y = 0;\n  delta_x = end_x - x;\n  delta_y = end_y - y;\n  points = [];\n\n  if (direction) {\n    points = [0, 0, delta_x, delta_y];\n  } else {\n    points = [!delta_x * 5, !delta_x * 5, delta_x - !delta_x * 5, delta_y - !delta_x * 5];\n  }\n\n  return React.createElement(Line, {\n    x: x,\n    y: y,\n    points: points,\n    stroke: color,\n    strokeWidth: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  });\n}\n\nfunction RegisterPage() {\n  document.documentElement.classList.remove(\"nav-open\");\n  React.useEffect(() => {\n    document.body.classList.add(\"register-page\");\n    return function cleanup() {\n      document.body.classList.remove(\"register-page\");\n    };\n  });\n  return React.createElement(React.Fragment, null, React.createElement(ExamplesNavbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"page-header\",\n    \"data-parallax\": true,\n    style: {\n      backgroundColor: 'rgba(0,0,0,.76)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Row, {\n    style: {\n      alignContent: 'center',\n      justifyContent: 'center',\n      border: 10,\n      borderColor: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontWeight: 'bold',\n      fontSize: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Map Analysis for: Espinho\"), React.createElement(Stage, {\n    width: window_width,\n    height: window_height,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Layer, {\n    id: \"map\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, analyse_streets(true), analyse_streets(false), React.createElement(Line, {\n    x: 250,\n    y: 100,\n    points: [0, !50, !0 * 100, 0],\n    stroke: \"green\",\n    strokeWidth: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(Line, {\n    x: 250,\n    y: 100,\n    points: [0, 5, 100, 5],\n    stroke: \"yellow\",\n    strokeWidth: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(Line, {\n    x: 450,\n    y: 100,\n    points: [0, 0, 100, 0],\n    stroke: \"red\",\n    strokeWidth: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(Line, {\n    x: 250,\n    y: 200,\n    points: [0, 0, 100, 0],\n    stroke: \"red\",\n    strokeWidth: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Line, {\n    x: 350,\n    y: 200,\n    points: [0, 0, 100, 0],\n    stroke: \"red\",\n    strokeWidth: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(Line, {\n    x: 450,\n    y: 200,\n    points: [0, 0, 100, 0],\n    stroke: \"green\",\n    strokeWidth: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(Line, {\n    x: 250,\n    y: 300,\n    points: [0, 0, 100, 0],\n    stroke: \"green\",\n    strokeWidth: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(Line, {\n    x: 350,\n    y: 300,\n    points: [0, 0, 100, 0],\n    stroke: \"green\",\n    strokeWidth: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(Line, {\n    x: 450,\n    y: 300,\n    points: [0, 0, 100, 0],\n    stroke: \"red\",\n    strokeWidth: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), React.createElement(Line, {\n    x: 250,\n    y: 100,\n    points: [0, 0, 0, 100],\n    stroke: \"red\",\n    strokeWidth: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), React.createElement(Line, {\n    x: 250,\n    y: 200,\n    points: [0, 0, 0, 100],\n    stroke: \"green\",\n    strokeWidth: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), React.createElement(Line, {\n    x: 350,\n    y: 100,\n    points: [0, 0, 0, 100],\n    stroke: \"red\",\n    strokeWidth: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), React.createElement(Line, {\n    x: 350,\n    y: 200,\n    points: [0, 0, 0, 100],\n    stroke: \"green\",\n    strokeWidth: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }), React.createElement(Line, {\n    x: 450,\n    y: 100,\n    points: [0, 0, 0, 100],\n    stroke: \"green\",\n    strokeWidth: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }), React.createElement(Line, {\n    x: 450,\n    y: 200,\n    points: [0, 0, 0, 100],\n    stroke: \"yellow\",\n    strokeWidth: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }), React.createElement(Line, {\n    x: 550,\n    y: 100,\n    points: [0, 0, 0, 100],\n    stroke: \"red\",\n    strokeWidth: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }), React.createElement(Line, {\n    x: 550,\n    y: 200,\n    points: [0, 0, 0, 100],\n    stroke: \"green\",\n    strokeWidth: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }), React.createElement(Line, {\n    x: 250,\n    y: 100,\n    points: [0, 0, 100, 100],\n    stroke: \"green\",\n    strokeWidth: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }), React.createElement(Line, {\n    x: 250,\n    y: 100,\n    points: [5, 0, 100, 95],\n    stroke: \"yellow\",\n    strokeWidth: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }), React.createElement(Line, {\n    x: 450,\n    y: 200,\n    points: [0, 0, 120, -120],\n    stroke: \"red\",\n    strokeWidth: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  })))))));\n}\n\nexport default RegisterPage;","map":{"version":3,"sources":["/home/tomascosta/Downloads/IES/iesproject_trafficjammer/traffic-jammer/Mapper/src/views/examples/MapperPage.js"],"names":["React","render","Stage","Layer","Star","Line","Circle","Text","Button","Form","Input","Container","Row","Col","ExamplesNavbar","window_height","window_width","analyse_streets","direction","x","y","end_x","end_y","delta_x","delta_y","points","color","RegisterPage","document","documentElement","classList","remove","useEffect","body","add","cleanup","backgroundColor","alignContent","justifyContent","border","borderColor","fontWeight","fontSize"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Paper Kit React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-kit-react\n\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/paper-kit-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\nimport { render } from 'react-dom';\nimport { Stage, Layer, Star,Line,Circle, Text } from 'react-konva';\n// reactstrap components\nimport { Button, Form, Input, Container, Row, Col } from \"reactstrap\";\n\n// core components\nimport ExamplesNavbar from \"components/Navbars/ExamplesNavbar.js\";\n\nlet window_height = 400;\nlet window_width = 800;\n\nfunction analyse_streets(direction){\n  var x,y,end_x,end_y,delta_x,delta_y,points, color\n  x = 250\n  y = 0\n  end_x = 350\n  end_y = 0\n  delta_x = end_x - x\n  delta_y = end_y - y\n  points = []\n  if (direction){\n    points = [0,0,delta_x, delta_y]\n  } else {\n    points = [!(delta_x)*5, !(delta_x)*5,delta_x-!(delta_x)*5,delta_y-!(delta_x)*5]\n  }\n  return (\n    <Line \n      x = {x}\n      y = {y}\n      points={points}\n      stroke = {color}\n      strokeWidth = \"4\"\n    />\n  )\n}\n\nfunction RegisterPage() {\n  document.documentElement.classList.remove(\"nav-open\");\n  React.useEffect(() => {\n    document.body.classList.add(\"register-page\");\n    return function cleanup() {\n      document.body.classList.remove(\"register-page\");\n    };\n  });\n  return (\n    <>\n      <ExamplesNavbar />\n      <div\n        className=\"page-header\"\n        data-parallax={true}\n        style={{\n          backgroundColor:'rgba(0,0,0,.76)',\n        }}\n      >\n        <div className=\"\" />\n        <Container>\n          <Row style={{alignContent:'center',justifyContent:'center',border:10,borderColor:'white'}}>\n            <Text style={{color:'white', fontWeight:'bold', fontSize:30}}>Map Analysis for: Espinho</Text>\n            <Stage width={window_width} height={window_height}>\n                <Layer id=\"map\">\n                  {analyse_streets(true)}\n                  {analyse_streets(false)}\n\n                {/* Aqui fazer as linhas (mudar isto para um for e dar draw automatico, mt cancer para ja)*/}\n                {/* 1 linha */}\n                <Line\n                  x={250}\n                  y={100}\n                  points={[0, !(50), !(0)*100, 0]}\n                  stroke=\"green\"\n                  strokeWidth=\"4\"            \n                />\n                <Line\n                  x={250}\n                  y={100}\n                  points={[0, 5, 100, 5]}\n                  stroke=\"yellow\"\n                  strokeWidth=\"4\"            \n                />\n                <Line\n                  x={450}\n                  y={100}\n                  points={[0, 0, 100, 0]}\n                  stroke=\"red\"\n                  strokeWidth=\"4\"            \n                />\n                  {/* 2 linha */}\n                <Line\n                  x={250}\n                  y={200}\n                  points={[0, 0, 100, 0]}\n                  stroke=\"red\"\n                  strokeWidth=\"4\"            \n                />\n                <Line\n                  x={350}\n                  y={200}\n                  points={[0, 0, 100, 0]}\n                  stroke=\"red\"\n                  strokeWidth=\"4\"            \n                />\n                <Line\n                  x={450}\n                  y={200}\n                  points={[0, 0, 100, 0]}\n                  stroke=\"green\"\n                  strokeWidth=\"4\"            \n                />\n                {/* 3 linha */}\n\n                <Line\n                  x={250}\n                  y={300}\n                  points={[0, 0, 100, 0]}\n                  stroke=\"green\"\n                  strokeWidth=\"4\"            \n                />\n                <Line\n                  x={350}\n                  y={300}\n                  points={[0, 0, 100, 0]}\n                  stroke=\"green\"\n                  strokeWidth=\"4\"            \n                />\n                <Line\n                  x={450}\n                  y={300}\n                  points={[0, 0, 100, 0]}\n                  stroke=\"red\"\n                  strokeWidth=\"4\"            \n                />\n\n                {/* Agora fazer as colunas */}\n                {/* 1 coluna */}\n                <Line\n                  x={250}\n                  y={100}\n                  points={[0, 0, 0, 100]}\n                  stroke=\"red\"\n                  strokeWidth=\"4\"            \n                />\n                <Line\n                  x={250}\n                  y={200}\n                  points={[0, 0, 0, 100]}\n                  stroke=\"green\"\n                  strokeWidth=\"4\"            \n                />\n\n                {/* 2 coluna */}\n                <Line\n                  x={350}\n                  y={100}\n                  points={[0, 0, 0, 100]}\n                  stroke=\"red\"\n                  strokeWidth=\"4\"            \n                />\n                <Line\n                  x={350}\n                  y={200}\n                  points={[0, 0, 0, 100]}\n                  stroke=\"green\"\n                  strokeWidth=\"4\"            \n                />\n\n                {/* 3 coluna */}\n                <Line\n                  x={450}\n                  y={100}\n                  points={[0, 0, 0, 100]}\n                  stroke=\"green\"\n                  strokeWidth=\"4\"            \n                />\n                <Line\n                  x={450}\n                  y={200}\n                  points={[0, 0, 0, 100]}\n                  stroke=\"yellow\"\n                  strokeWidth=\"4\"            \n                />\n\n                {/* 4 coluna */}\n                <Line\n                  x={550}\n                  y={100}\n                  points={[0, 0, 0, 100]}\n                  stroke=\"red\"\n                  strokeWidth=\"4\"            \n                />\n                <Line\n                  x={550}\n                  y={200}\n                  points={[0, 0, 0, 100]}\n                  stroke=\"green\"\n                  strokeWidth=\"4\"            \n                />\n\n                {/* Diagonais */}\n                <Line\n                  x={250}\n                  y={100}\n                  points={[0, 0, 100, 100]}\n                  stroke=\"green\"\n                  strokeWidth=\"4\"            \n                />\n                <Line\n                  x={250}\n                  y={100}\n                  points={[5, 0, 100, 95]}\n                  stroke=\"yellow\"\n                  strokeWidth=\"4\"            \n                />\n                <Line\n                  x={450}\n                  y={200}\n                  points={[0, 0, 120, -120]}\n                  stroke=\"red\"\n                  strokeWidth=\"4\"            \n                />\n\n                </Layer>\n            </Stage>\n          </Row>\n        </Container>\n\n      </div>\n    </>\n  );\n}\n\nexport default RegisterPage;\n"]},"metadata":{},"sourceType":"module"}