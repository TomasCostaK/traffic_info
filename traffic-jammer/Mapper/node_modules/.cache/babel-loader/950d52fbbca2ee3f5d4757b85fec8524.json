{"ast":null,"code":"var _jsxFileName = \"/home/tomascosta/Downloads/IES/iesproject_trafficjammer/traffic-jammer/Mapper/src/views/examples/MapperPage.js\";\n\n/*!\n\n=========================================================\n* Paper Kit React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-kit-react\n\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/paper-kit-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport map_data_json from \"../../data/Mapdata\";\nimport { render } from 'react-dom';\nimport { Stage, Layer, Star, Line, Circle, Text } from 'react-konva'; // reactstrap components\n\nimport { Button, Form, Input, Container, Row, Col } from \"reactstrap\"; // core components\n\nimport ExamplesNavbar from \"components/Navbars/ExamplesNavbar.js\";\nlet window_height = 400;\nlet window_width = 800;\nlet zooming_distance = 5;\nvar map_data;\n\nfunction draw_street(begx, begy, endx, endy, color, direction) {\n  var delta_x, delta_y, points;\n  delta_x = endx - begx;\n  delta_y = endy - begy;\n  points = [];\n\n  if (direction) {\n    points = [0, 0, delta_x, delta_y]; //color = \"green\"\n  } else {\n    points = [!delta_x * 5, !delta_y * 5, delta_x + !delta_x * 5, delta_y + !delta_y * 5];\n\n    if (delta_x != 0 && delta_y != 0) {\n      points = [0, 5, delta_x - 5, delta_y];\n    } //color = \"yellow\"\n\n  }\n\n  console.log(\"Line i will draw: \");\n  console.log(\"Begx: \" + begx + \",begy\" + begy + \", points: \" + points + \", color: \" + color);\n  return React.createElement(Line, {\n    x: begx,\n    y: begy,\n    points: points,\n    stroke: color,\n    strokeWidth: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  });\n}\n\nfunction analyse_traffic(number_cars) {\n  if (number_cars > 40) {\n    return \"red\";\n  } else if (number_cars > 20) {\n    return \"yellow\";\n  } else {\n    return \"green\";\n  }\n}\n\nfunction fill_map() {\n  //makeRemoteRequest();\n  //Adicionar isto assim que tivermos o pedido\n  map_data = map_data_json;\n  const lines = [];\n\n  for (let index = 0; index < map_data.length; index++) {\n    const trecho = map_data[index];\n    var traffic = analyse_traffic(trecho.number_cars);\n    console.log(trecho); //Por isto num array? E dar push do return inteiro\n\n    lines.push(draw_street(trecho.beggining_coords_x / zooming_distance, trecho.beggining_coords_y / zooming_distance, trecho.ending_coords_x / zooming_distance, trecho.ending_coords_y / zooming_distance, traffic, trecho.actual_direction));\n  }\n\n  return lines;\n}\n\nfunction makeRemoteRequest() {\n  console.log(\"Here\");\n  return fetch('127.0.0.1:8000/info_street/').then(response => response.json()).then(responseJson => {\n    map_data = responseJson;\n    console.log(responseJson);\n  }).catch(error => {\n    console.log(error);\n  });\n}\n\nfunction change_zoom(bool) {\n  if (bool) {\n    zooming_distance = zooming_distance - 1;\n  } else {\n    zooming_distance = zooming_distance + 1;\n  } //Arrnjar maneira de conseguir mudar a zooming distance\n\n\n  return fill_map();\n}\n\nfunction RegisterPage() {\n  document.documentElement.classList.remove(\"nav-open\");\n  React.useEffect(() => {\n    document.body.classList.add(\"register-page\");\n    return function cleanup() {\n      document.body.classList.remove(\"register-page\");\n    };\n  });\n  return React.createElement(React.Fragment, null, React.createElement(ExamplesNavbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"page-header\",\n    \"data-parallax\": true,\n    style: {\n      backgroundColor: 'rgba(0,0,0,.85)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Row, {\n    style: {\n      alignContent: 'center',\n      justifyContent: 'center',\n      border: 10,\n      borderColor: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      padding: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontWeight: 'bold',\n      fontSize: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Map Analysis for: Espinho\"), React.createElement(Button, {\n    onClick: change_zoom(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Zoom+\"), React.createElement(Button, {\n    onClick: change_zoom(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Zoom-\")), React.createElement(Stage, {\n    width: window_width,\n    height: window_height,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(Layer, {\n    id: \"map\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, fill_map()))))));\n}\n\nexport default RegisterPage;","map":{"version":3,"sources":["/home/tomascosta/Downloads/IES/iesproject_trafficjammer/traffic-jammer/Mapper/src/views/examples/MapperPage.js"],"names":["React","map_data_json","render","Stage","Layer","Star","Line","Circle","Text","Button","Form","Input","Container","Row","Col","ExamplesNavbar","window_height","window_width","zooming_distance","map_data","draw_street","begx","begy","endx","endy","color","direction","delta_x","delta_y","points","console","log","analyse_traffic","number_cars","fill_map","lines","index","length","trecho","traffic","push","beggining_coords_x","beggining_coords_y","ending_coords_x","ending_coords_y","actual_direction","makeRemoteRequest","fetch","then","response","json","responseJson","catch","error","change_zoom","bool","RegisterPage","document","documentElement","classList","remove","useEffect","body","add","cleanup","backgroundColor","alignContent","justifyContent","border","borderColor","padding","fontWeight","fontSize"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA4BC,IAA5B,EAAiCC,MAAjC,EAAyCC,IAAzC,QAAqD,aAArD,C,CACA;;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,SAA9B,EAAyCC,GAAzC,EAA8CC,GAA9C,QAAyD,YAAzD,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AAEA,IAAIC,aAAa,GAAG,GAApB;AACA,IAAIC,YAAY,GAAG,GAAnB;AACA,IAAIC,gBAAgB,GAAG,CAAvB;AAEA,IAAIC,QAAJ;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,IAA3B,EAAiCC,IAAjC,EAAuCC,IAAvC,EAA6CC,KAA7C,EAAmDC,SAAnD,EAA6D;AAC3D,MAAIC,OAAJ,EAAYC,OAAZ,EAAoBC,MAApB;AACAF,EAAAA,OAAO,GAAGJ,IAAI,GAAGF,IAAjB;AACAO,EAAAA,OAAO,GAAGJ,IAAI,GAAGF,IAAjB;AACAO,EAAAA,MAAM,GAAG,EAAT;;AAEA,MAAIH,SAAJ,EAAc;AACZG,IAAAA,MAAM,GAAG,CAAC,CAAD,EAAG,CAAH,EAAKF,OAAL,EAAcC,OAAd,CAAT,CADY,CAEZ;AACD,GAHD,MAGO;AACLC,IAAAA,MAAM,GAAG,CAAC,CAAEF,OAAF,GAAW,CAAZ,EAAe,CAAEC,OAAF,GAAW,CAA1B,EAA4BD,OAAO,GAAC,CAAEA,OAAF,GAAW,CAA/C,EAAiDC,OAAO,GAAC,CAAEA,OAAF,GAAW,CAApE,CAAT;;AACA,QAAID,OAAO,IAAI,CAAX,IAAgBC,OAAO,IAAI,CAA/B,EAAiC;AAC/BC,MAAAA,MAAM,GAAG,CAAC,CAAD,EAAG,CAAH,EAAKF,OAAO,GAAC,CAAb,EAAeC,OAAf,CAAT;AACD,KAJI,CAKL;;AACD;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAWV,IAAX,GAAkB,OAAlB,GAA4BC,IAA5B,GAAmC,YAAnC,GAAkDO,MAAlD,GAA2D,WAA3D,GAAyEJ,KAArF;AACA,SACE,oBAAC,IAAD;AACE,IAAA,CAAC,EAAIJ,IADP;AAEE,IAAA,CAAC,EAAIC,IAFP;AAGE,IAAA,MAAM,EAAEO,MAHV;AAIE,IAAA,MAAM,EAAIJ,KAJZ;AAKE,IAAA,WAAW,EAAI,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD;;AAED,SAASO,eAAT,CAAyBC,WAAzB,EAAqC;AACnC,MAAIA,WAAW,GAAG,EAAlB,EAAsB;AACpB,WAAO,KAAP;AACD,GAFD,MAGK,IAAIA,WAAW,GAAG,EAAlB,EAAqB;AACxB,WAAO,QAAP;AACD,GAFI,MAGD;AACF,WAAO,OAAP;AACD;AACF;;AAED,SAASC,QAAT,GAAmB;AACjB;AACA;AACAf,EAAAA,QAAQ,GAAGlB,aAAX;AACA,QAAMkC,KAAK,GAAG,EAAd;;AAEA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGjB,QAAQ,CAACkB,MAArC,EAA6CD,KAAK,EAAlD,EAAsD;AACpD,UAAME,MAAM,GAAGnB,QAAQ,CAACiB,KAAD,CAAvB;AACA,QAAIG,OAAO,GAAGP,eAAe,CAACM,MAAM,CAACL,WAAR,CAA7B;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYO,MAAZ,EAHoD,CAIpD;;AACAH,IAAAA,KAAK,CAACK,IAAN,CAAYpB,WAAW,CAACkB,MAAM,CAACG,kBAAP,GAA0BvB,gBAA3B,EAA6CoB,MAAM,CAACI,kBAAP,GAA0BxB,gBAAvE,EAAyFoB,MAAM,CAACK,eAAP,GAAuBzB,gBAAhH,EAAkIoB,MAAM,CAACM,eAAP,GAAuB1B,gBAAzJ,EAA2KqB,OAA3K,EAAqLD,MAAM,CAACO,gBAA5L,CAAvB;AACD;;AAED,SAASV,KAAT;AAED;;AAED,SAASW,iBAAT,GAA4B;AACxBhB,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,SAAOgB,KAAK,CAAC,6BAAD,CAAL,CACNC,IADM,CACEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADf,EAENF,IAFM,CAEEG,YAAD,IAAiB;AAEzBhC,IAAAA,QAAQ,GAAGgC,YAAX;AACArB,IAAAA,OAAO,CAACC,GAAR,CAAYoB,YAAZ;AAEC,GAPM,EAQRC,KARQ,CAQDC,KAAD,IAAW;AAChBvB,IAAAA,OAAO,CAACC,GAAR,CAAYsB,KAAZ;AACD,GAVQ,CAAP;AAYH;;AAED,SAASC,WAAT,CAAqBC,IAArB,EAA0B;AACxB,MAAGA,IAAH,EAAQ;AACNrC,IAAAA,gBAAgB,GAAGA,gBAAgB,GAAG,CAAtC;AACD,GAFD,MAEK;AACHA,IAAAA,gBAAgB,GAAGA,gBAAgB,GAAG,CAAtC;AACD,GALuB,CAOxB;;;AACA,SAAOgB,QAAQ,EAAf;AACD;;AAED,SAASsB,YAAT,GAAwB;AACtBC,EAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCC,MAAnC,CAA0C,UAA1C;AACA5D,EAAAA,KAAK,CAAC6D,SAAN,CAAgB,MAAM;AACpBJ,IAAAA,QAAQ,CAACK,IAAT,CAAcH,SAAd,CAAwBI,GAAxB,CAA4B,eAA5B;AACA,WAAO,SAASC,OAAT,GAAmB;AACxBP,MAAAA,QAAQ,CAACK,IAAT,CAAcH,SAAd,CAAwBC,MAAxB,CAA+B,eAA/B;AACD,KAFD;AAGD,GALD;AAMA,SACE,0CACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,qBAAe,IAFjB;AAGE,IAAA,KAAK,EAAE;AACLK,MAAAA,eAAe,EAAC;AADX,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,YAAY,EAAC,QAAd;AAAuBC,MAAAA,cAAc,EAAC,QAAtC;AAA+CC,MAAAA,MAAM,EAAC,EAAtD;AAAyDC,MAAAA,WAAW,EAAC;AAArE,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAC;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAC7C,MAAAA,KAAK,EAAC,OAAP;AAAgB8C,MAAAA,UAAU,EAAC,MAA3B;AAAmCC,MAAAA,QAAQ,EAAC;AAA5C,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAElB,WAAW,CAAC,IAAD,CADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAOE,oBAAC,MAAD;AACA,IAAA,OAAO,EAAEA,WAAW,CAAC,KAAD,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,CADF,EAcE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAErC,YAAd;AAA4B,IAAA,MAAM,EAAED,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGCkB,QAAQ,EAHT,CADJ,CAdF,CADF,CARF,CAFF,CADF;AAwCD;;AAED,eAAesB,YAAf","sourcesContent":["/*!\n\n=========================================================\n* Paper Kit React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-kit-react\n\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/paper-kit-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport map_data_json from \"../../data/Mapdata\"\nimport { render } from 'react-dom';\nimport { Stage, Layer, Star,Line,Circle, Text } from 'react-konva';\n// reactstrap components\nimport { Button, Form, Input, Container, Row, Col } from \"reactstrap\";\n\n// core components\nimport ExamplesNavbar from \"components/Navbars/ExamplesNavbar.js\";\n\nlet window_height = 400;\nlet window_width = 800;\nlet zooming_distance = 5;\n\nvar map_data;\n\nfunction draw_street(begx, begy, endx, endy, color,direction){\n  var delta_x,delta_y,points\n  delta_x = endx - begx\n  delta_y = endy - begy\n  points = []\n\n  if (direction){\n    points = [0,0,delta_x, delta_y]\n    //color = \"green\"\n  } else {\n    points = [!(delta_x)*5, !(delta_y)*5,delta_x+!(delta_x)*5,delta_y+!(delta_y)*5]\n    if (delta_x != 0 && delta_y != 0){\n      points = [0,5,delta_x-5,delta_y]\n    }\n    //color = \"yellow\"\n  }\n  console.log(\"Line i will draw: \")\n  console.log(\"Begx: \" + begx + \",begy\" + begy + \", points: \" + points + \", color: \" + color)\n  return (\n    <Line \n      x = {begx}\n      y = {begy}\n      points={points}\n      stroke = {color}\n      strokeWidth = {4}\n    />\n  )\n}\n\nfunction analyse_traffic(number_cars){\n  if (number_cars > 40) {\n    return \"red\"\n  } \n  else if (number_cars > 20){\n    return \"yellow\"\n  }\n  else{\n    return \"green\"\n  }\n}\n\nfunction fill_map(){\n  //makeRemoteRequest();\n  //Adicionar isto assim que tivermos o pedido\n  map_data = map_data_json\n  const lines = []\n\n  for (let index = 0; index < map_data.length; index++) {\n    const trecho = map_data[index];\n    var traffic = analyse_traffic(trecho.number_cars)\n    console.log(trecho)\n    //Por isto num array? E dar push do return inteiro\n    lines.push( draw_street(trecho.beggining_coords_x/zooming_distance, trecho.beggining_coords_y/zooming_distance, trecho.ending_coords_x/zooming_distance, trecho.ending_coords_y/zooming_distance, traffic , trecho.actual_direction))\n  }\n\n  return ( lines )\n\n}\n\nfunction makeRemoteRequest(){\n    console.log(\"Here\");\n    return fetch('127.0.0.1:8000/info_street/')\n    .then ( (response) => response.json() )\n    .then ( (responseJson) =>{\n    \n    map_data = responseJson;\n    console.log(responseJson);\n\n    })\n  .catch((error) => {\n    console.log(error);\n  });\n  \n}\n\nfunction change_zoom(bool){\n  if(bool){\n    zooming_distance = zooming_distance - 1\n  }else{\n    zooming_distance = zooming_distance + 1\n  }\n\n  //Arrnjar maneira de conseguir mudar a zooming distance\n  return(fill_map())\n}\n\nfunction RegisterPage() {\n  document.documentElement.classList.remove(\"nav-open\");\n  React.useEffect(() => {\n    document.body.classList.add(\"register-page\");\n    return function cleanup() {\n      document.body.classList.remove(\"register-page\");\n    };\n  });\n  return (\n    <>\n      <ExamplesNavbar />\n      <div\n        className=\"page-header\"\n        data-parallax={true}\n        style={{\n          backgroundColor:'rgba(0,0,0,.85)',\n        }}\n      >\n        <div className=\"\" />\n        <Container>\n          <Row style={{alignContent:'center',justifyContent:'center',border:10,borderColor:'white'}}>\n            <div style={{padding:20}}>\n              <Text style={{color:'white', fontWeight:'bold', fontSize:30}}>Map Analysis for: Espinho</Text>\n              <Button\n                onClick={change_zoom(true)}\n              >\n                Zoom+\n              </Button>\n              <Button\n              onClick={change_zoom(false)}\n              >\n                Zoom-\n              </Button>\n            </div>\n            <Stage width={window_width} height={window_height}>\n                <Layer id=\"map\">\n                \n                {/* Aqui desenhamos o mapa */}\n                {fill_map()}\n\n                </Layer>\n            </Stage>\n          </Row>\n        </Container>\n\n      </div>\n    </>\n  );\n}\n\nexport default RegisterPage;\n"]},"metadata":{},"sourceType":"module"}